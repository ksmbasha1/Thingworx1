<?xml version="1.0" encoding="UTF-8"?>
<Entities
 build="b535"
 majorVersion="8"
 minorVersion="3"
 modelPersistenceProviderPackage="H2PersistenceProviderPackage"
 revision="2"
 schemaVersion="1030"
 universal="">
    <Things>
        <Thing
         description="Simulates creating some data"
         documentationContent=""
         effectiveThingPackage="TimerThing"
         enabled="true"
         homeMashup=""
         identifier=""
         lastModifiedDate="2019-10-01T12:11:13.700Z"
         name="Simulator"
         projectName=""
         published="false"
         tags="Applications:AcmeVending;Applications:TemperatureSimulation;Applications:AcmeFoodsFruit"
         thingTemplate="Timer"
         valueStream="">
            <avatar></avatar>
            <DesignTimePermissions>
                <Create></Create>
                <Read></Read>
                <Update></Update>
                <Delete></Delete>
                <Metadata></Metadata>
            </DesignTimePermissions>
            <RunTimePermissions></RunTimePermissions>
            <VisibilityPermissions>
                <Visibility></Visibility>
            </VisibilityPermissions>
            <ConfigurationTableDefinitions></ConfigurationTableDefinitions>
            <ConfigurationTables>
                <ConfigurationTable
                 description="General Settings"
                 isMultiRow="false"
                 name="Settings"
                 ordinal="0">
                    <DataShape>
                        <FieldDefinitions>
                            <FieldDefinition
                             aspect.defaultValue="true"
                             baseType="BOOLEAN"
                             description="Automatically enable timer on startup"
                             name="enabled"
                             ordinal="0"></FieldDefinition>
                            <FieldDefinition
                             baseType="USERNAME"
                             description="User context in which to run event handlers"
                             name="runAsUser"
                             ordinal="0"></FieldDefinition>
                            <FieldDefinition
                             aspect.defaultValue="60000.0"
                             baseType="NUMBER"
                             description="Update rate"
                             name="updateRate"
                             ordinal="0"></FieldDefinition>
                        </FieldDefinitions>
                    </DataShape>
                    <Rows>
                        <Row>
                            <enabled>true</enabled>
                            <runAsUser></runAsUser>
                            <updateRate>10000.0</updateRate>
                        </Row>
                    </Rows>
                </ConfigurationTable>
            </ConfigurationTables>
            <ThingShape>
                <PropertyDefinitions>
                    <PropertyDefinition
                     aspect.dataChangeThreshold="0.0"
                     aspect.dataChangeType="VALUE"
                     aspect.isPersistent="false"
                     aspect.isReadOnly="false"
                     baseType="NUMBER"
                     category=""
                     description=""
                     isLocalOnly="false"
                     name="RandomNumericValue"
                     ordinal="0"></PropertyDefinition>
                    <PropertyDefinition
                     aspect.dataChangeThreshold="0.0"
                     aspect.dataChangeType="VALUE"
                     aspect.defaultValue="200.0"
                     aspect.isPersistent="false"
                     aspect.isReadOnly="false"
                     baseType="NUMBER"
                     category=""
                     description=""
                     isLocalOnly="false"
                     name="NumericValueMax"
                     ordinal="0"></PropertyDefinition>
                    <PropertyDefinition
                     aspect.dataChangeThreshold="0.0"
                     aspect.dataChangeType="VALUE"
                     aspect.defaultValue="false"
                     aspect.isPersistent="false"
                     aspect.isReadOnly="false"
                     baseType="BOOLEAN"
                     category=""
                     description=""
                     isLocalOnly="false"
                     name="NumericDirectionUp"
                     ordinal="0"></PropertyDefinition>
                    <PropertyDefinition
                     aspect.dataChangeThreshold="0.0"
                     aspect.dataChangeType="VALUE"
                     aspect.defaultValue="-200.0"
                     aspect.isPersistent="false"
                     aspect.isReadOnly="false"
                     baseType="NUMBER"
                     category=""
                     description=""
                     isLocalOnly="false"
                     name="NumericValueMin"
                     ordinal="0"></PropertyDefinition>
                    <PropertyDefinition
                     aspect.dataChangeThreshold="0.0"
                     aspect.dataChangeType="VALUE"
                     aspect.defaultValue="0.0"
                     aspect.isPersistent="false"
                     aspect.isReadOnly="false"
                     aspect.maximumValue="200.0"
                     aspect.minimumValue="-200.0"
                     baseType="NUMBER"
                     category=""
                     description=""
                     isLocalOnly="false"
                     name="NumericValue"
                     ordinal="0"></PropertyDefinition>
                </PropertyDefinitions>
                <ServiceDefinitions></ServiceDefinitions>
                <EventDefinitions></EventDefinitions>
                <ServiceMappings></ServiceMappings>
                <ServiceImplementations></ServiceImplementations>
                <Subscriptions>
                    <Subscription
                     enabled="true"
                     eventName="Timer"
                     source=""
                     sourceProperty=""
                     sourceType="Thing">
                        <ServiceImplementation
                         description=""
                         handlerName="Script"
                         name="Event.Timer">
                            <ConfigurationTables>
                                <ConfigurationTable
                                 description=""
                                 isMultiRow="false"
                                 name="Script"
                                 ordinal="0">
                                    <DataShape>
                                        <FieldDefinitions>
                                            <FieldDefinition
                                             baseType="STRING"
                                             description="code"
                                             name="code"
                                             ordinal="0"></FieldDefinition>
                                        </FieldDefinitions>
                                    </DataShape>
                                    <Rows>
                                        <Row>
                                            <code>
                                            <![CDATA[
                                            if((me.NumericDirectionUp == true) && (me.NumericValue == me.NumericValueMax)) {
                                            	me.NumericDirectionUp = false;
                                            	me.NumericValue = me.NumericValue - 10; 
                                            }
                                            if((me.NumericDirectionUp == false) && (me.NumericValue == me.NumericValueMin)) {
                                            	me.NumericDirectionUp = true;
                                            	me.NumericValue = me.NumericValue + 10; 
                                            }
                                            if((me.NumericDirectionUp == true) && (me.NumericValue < me.NumericValueMax)) {
                                            	me.NumericValue = me.NumericValue + 10; 
                                            }
                                            if((me.NumericDirectionUp == false) && (me.NumericValue > me.NumericValueMin)) {
                                            	me.NumericValue = me.NumericValue - 10; 
                                            }
                                            
                                            me.RandomNumericValue=Math.floor(Math.random()*101);
                                            ]]>
                                            </code>
                                        </Row>
                                    </Rows>
                                </ConfigurationTable>
                            </ConfigurationTables>
                        </ServiceImplementation>
                    </Subscription>
                </Subscriptions>
            </ThingShape>
            <PropertyBindings></PropertyBindings>
            <RemotePropertyBindings></RemotePropertyBindings>
            <RemoteServiceBindings></RemoteServiceBindings>
            <RemoteEventBindings></RemoteEventBindings>
            <AlertConfigurations></AlertConfigurations>
            <ImplementedShapes></ImplementedShapes>
            <ThingProperties></ThingProperties>
        </Thing>
    </Things>
</Entities>
